{
  "openapi": "3.0.0",
  "info": {
    "title": "Ice cream market.",
    "description": "This project it's api to feed the ice cream market application service.",
    "contact": {
      "phone": "+55(84)981758502",
      "email": "haryssonsoares@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "If you run this project locally"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ROLE": {
        "type": "string",
        "enum": [
          "ADMIN",
          "MEMBER",
          "CLIENT"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "$ref": "#/components/schemas/ROLE"
          },
          "user": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "adminId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "admin": {
            "$ref": "#/components/schemas/Admin"
          },
          "clientId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "memberId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "toppings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Topping"
            }
          },
          "creams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cream"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "addressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "clientId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "square": {
            "type": "string"
          },
          "house": {
            "type": "string"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          }
        }
      },
      "Topping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "isSpecial": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "amount": {
            "type": "integer"
          },
          "unit": {
            "type": "string",
            "default": "Unidades"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      },
      "Cream": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isSpecial": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "amount": {
            "type": "integer"
          },
          "unit": {
            "type": "string",
            "default": "Unidades"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "size": {
            "type": "string",
            "unique": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "maxCreamsAllowed": {
            "type": "integer"
          },
          "maxToppingsAllowed": {
            "type": "integer"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/resources/toppings": {
      "post": {
        "summary": "Create Topping",
        "description": "Endpoint to add a new Topping to the system.",
        "tags": [
          "Topping"
        ],
        "requestBody": {
          "description": "Topping details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Topping created as Admin",
                    "require": true
                  },
                  "amount": {
                    "type": "number",
                    "example": 2,
                    "require": true
                  },
                  "price": {
                    "type": "number",
                    "example": 12.99,
                    "require": true
                  },
                  "unit": {
                    "type": "string",
                    "example": "unidade",
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "URL-PHOTO",
                    "require": false
                  },
                  "available": {
                    "type": "boolean",
                    "example": true,
                    "require": false
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": false,
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping created successfully",
                  "data": {
                    "id": "3d23001f-1a2a-4ce9-9175-7629a4f55c67",
                    "createdAt": "2024-01-02T01:01:49.188Z",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:49.188Z",
                    "name": "Test Topping created as Admin",
                    "photo": "URL-PHOTO",
                    "isSpecial": false,
                    "available": true,
                    "price": 12.99,
                    "amount": 2,
                    "unit": "unidade",
                    "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "amount must be a number and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Toppings",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list toppings",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many toppings to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter toppings by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of toppings based on optional query parameters.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "200": {
            "description": "Successful getting topping",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "3d23001f-1a2a-4ce9-9175-7629a4f55c67",
                      "createdAt": "2024-01-02T01:01:49.188Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.188Z",
                      "name": "Test Topping created as Admin",
                      "photo": "URL-PHOTO",
                      "isSpecial": false,
                      "available": true,
                      "price": 12.99,
                      "amount": 2,
                      "unit": "unidade",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "2503b29a-b90d-4141-bd1d-325ec575e4a2",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating odd many 1",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 1,
                      "amount": 1,
                      "unit": "litros",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "d018b5f0-bc13-4601-9d0a-0fd97409da97",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating even many 6",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 106,
                      "amount": 26,
                      "unit": "bag",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "2fba5b31-5234-45b0-a61d-6ede6c699558",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating odd many 3",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 3,
                      "amount": 3,
                      "unit": "litros",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "c68ff983-a820-4efa-8e37-b82a683b4397",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating even many 4",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 104,
                      "amount": 24,
                      "unit": "bag",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "0bf0f826-2860-40dc-88a2-73950b6a0c03",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating odd many 5",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 5,
                      "amount": 5,
                      "unit": "litros",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "aaa1f183-469c-43d0-ba6e-0093c336f244",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating even many 2",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 102,
                      "amount": 22,
                      "unit": "bag",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "db2b3d2d-b089-478c-bc4f-7528c5353768",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating odd many 7",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 7,
                      "amount": 7,
                      "unit": "litros",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "38c8a2f0-837f-452e-ab5c-717ab8abda9c",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating even many 8",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 108,
                      "amount": 28,
                      "unit": "bag",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    },
                    {
                      "id": "3bb0603d-432d-4981-a56d-bde5c081f468",
                      "createdAt": "2024-01-02T01:01:49.267Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:49.267Z",
                      "name": "Test topping creating even many 0",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 100,
                      "amount": 20,
                      "unit": "bag",
                      "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 3
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown field(s)"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Toppings",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of toppings to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete toppings based on ids query parameter.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting toppings"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/toppings/{id}": {
      "get": {
        "summary": "Get Topping by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Topping to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Topping by its ID.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "200": {
            "description": "Successful getting topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping retrieved successfully",
                  "data": {
                    "id": "3d23001f-1a2a-4ce9-9175-7629a4f55c67",
                    "createdAt": "2024-01-02T01:01:49.188Z",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:49.188Z",
                    "name": "Test Topping created as Admin",
                    "photo": "URL-PHOTO",
                    "isSpecial": false,
                    "available": true,
                    "price": 12.99,
                    "amount": 2,
                    "unit": "unidade",
                    "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error to retrivier topping: No Topping found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Topping",
        "description": "Endpoint to update a Topping to the system.",
        "tags": [
          "Topping"
        ],
        "requestBody": {
          "description": "Topping details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Topping updated as Admin"
                  },
                  "amount": {
                    "type": "number",
                    "example": 2
                  },
                  "price": {
                    "type": "number",
                    "example": 12.5
                  },
                  "unit": {
                    "type": "string",
                    "example": "unit"
                  },
                  "photo": {
                    "type": "string",
                    "example": "some-photo.jpg"
                  },
                  "available": {
                    "type": "boolean",
                    "example": false
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping updated successfully",
                  "data": {
                    "id": "3d23001f-1a2a-4ce9-9175-7629a4f55c67",
                    "createdAt": "2024-01-02T01:01:49.188Z",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:49.343Z",
                    "name": "Test Topping updated as Admin",
                    "photo": "some-photo.jpg",
                    "isSpecial": true,
                    "available": false,
                    "price": 12.5,
                    "amount": 2,
                    "unit": "unit",
                    "adminId": "37fc782e-51ba-490b-a6ff-6e8c0f25807e"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Topping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of topping to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete topping based on id path parameter.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting topping"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/products": {
      "post": {
        "summary": "Create Product",
        "description": "Endpoint to add a new Product to the system.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "Product details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "example": 1.99,
                    "require": true
                  },
                  "size": {
                    "type": "number",
                    "example": "small",
                    "require": true
                  },
                  "maxCreamsAllowed": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "maxToppingsAllowed": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "url-photo",
                    "require": false
                  },
                  "name": {
                    "type": "string",
                    "example": "TEST PRODUCT NAME CREATED",
                    "require": false
                  },
                  "available": {
                    "type": "boolean",
                    "example": true,
                    "require": false
                  }
                },
                "required": [
                  "maxCreamsAllowed",
                  "maxToppingsAllowed",
                  "price",
                  "size"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product created successfully",
                  "data": {
                    "id": "6ec7776d-5dc5-44a1-b267-8acedf0dde6e",
                    "size": "small",
                    "name": "TEST PRODUCT NAME CREATED",
                    "createdAt": "2024-01-02T01:01:53.804Z",
                    "photo": "url-photo",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:53.804Z",
                    "available": true,
                    "price": 1.99,
                    "maxCreamsAllowed": 1,
                    "maxToppingsAllowed": 1,
                    "adminId": "155e6600-8097-4cb8-af6f-26cb502938ac"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "price must be a float number and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list products",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many products to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter products by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of products based on optional query parameters.",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Successful getting product",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Products",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of products to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete products based on ids query parameter.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting products"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/products/{id}": {
      "get": {
        "summary": "Get Product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Product to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Product by its ID.",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Successful getting product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product retrieved successfully",
                  "data": {
                    "id": "6ec7776d-5dc5-44a1-b267-8acedf0dde6e",
                    "size": "small",
                    "name": "TEST PRODUCT NAME CREATED",
                    "createdAt": "2024-01-02T01:01:53.804Z",
                    "photo": "url-photo",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:53.804Z",
                    "available": true,
                    "price": 1.99,
                    "maxCreamsAllowed": 1,
                    "maxToppingsAllowed": 1,
                    "adminId": "155e6600-8097-4cb8-af6f-26cb502938ac"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error getting product = No Product found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Product",
        "description": "Endpoint to update a Product to the system.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "Product details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Product updated as Admin"
                  },
                  "price": {
                    "type": "number",
                    "example": 12.5
                  },
                  "photo": {
                    "type": "string",
                    "example": "some-photo.jpg"
                  },
                  "size": {
                    "type": "string",
                    "example": "Update size product test"
                  },
                  "maxCreamsAllowed": {
                    "type": "string",
                    "example": 2
                  },
                  "maxToppingsAllowed": {
                    "type": "string",
                    "example": 2
                  },
                  "available": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product updated successfully",
                  "data": {
                    "id": "6ec7776d-5dc5-44a1-b267-8acedf0dde6e",
                    "size": "Update size product test",
                    "name": "Test Product updated as Admin",
                    "createdAt": "2024-01-02T01:01:53.804Z",
                    "photo": "some-photo.jpg",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:53.950Z",
                    "available": false,
                    "price": 12.5,
                    "maxCreamsAllowed": 2,
                    "maxToppingsAllowed": 2,
                    "adminId": "155e6600-8097-4cb8-af6f-26cb502938ac"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete product based on id path parameter.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting product"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/members": {
      "post": {
        "summary": "Create Member",
        "description": "Endpoint to add a new Member to the system.",
        "tags": [
          "Member"
        ],
        "requestBody": {
          "description": "Member details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Member Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "email": {
                    "type": "string",
                    "example": "test@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                      "createdAt": "2024-01-02T01:01:50.350Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.350Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "879e3257-4e73-469a-8737-19e956ca8a32",
                        "createdAt": "2024-01-02T01:01:50.350Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.350Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                        "clientId": "7cf90bbe-7974-4180-8df8-26f12e9d1e2c"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authorization is missing"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "name must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Members",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list members",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many members to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter members by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of members based on optional query parameters.",
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "Successful getting member",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "17557d2e-2647-4eef-a8fe-da95fd5fb6df",
                      "createdAt": "2024-01-02T01:01:50.263Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.263Z",
                      "name": "Test Member Authenticate to member crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "0fa8d98e-9886-4c4f-98aa-acc98be2bba2",
                        "createdAt": "2024-01-02T01:01:50.263Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.263Z",
                        "email": null,
                        "phone": null,
                        "relationship": null,
                        "userId": "17557d2e-2647-4eef-a8fe-da95fd5fb6df",
                        "clientId": "267930f2-32a7-4232-bee2-ffcf019bd5a4"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    },
                    {
                      "id": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                      "createdAt": "2024-01-02T01:01:50.350Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.350Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "879e3257-4e73-469a-8737-19e956ca8a32",
                        "createdAt": "2024-01-02T01:01:50.350Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.350Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                        "clientId": "7cf90bbe-7974-4180-8df8-26f12e9d1e2c"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    },
                    {
                      "id": "741ca05c-f562-4e1e-97ac-cf53ec0df9db",
                      "createdAt": "2024-01-02T01:01:50.390Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.390Z",
                      "name": "Test Member Created For Client",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "92ecb8e1-a515-4e06-90bb-850beb70a039",
                        "createdAt": "2024-01-02T01:01:50.390Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.390Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "741ca05c-f562-4e1e-97ac-cf53ec0df9db",
                        "clientId": "267930f2-32a7-4232-bee2-ffcf019bd5a4"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    }
                  ],
                  "hasNextPage": false,
                  "page": 1,
                  "totalPages": 1
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authorization is missing"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Members",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of members to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete members based on ids query parameter.",
        "tags": [
          "Member"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting members"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/members/{id}": {
      "get": {
        "summary": "Get Member by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Member to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Member to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Member by its ID.",
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "Successful getting member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                      "createdAt": "2024-01-02T01:01:50.350Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.350Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      },
                      "member": {
                        "id": "879e3257-4e73-469a-8737-19e956ca8a32",
                        "createdAt": "2024-01-02T01:01:50.350Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.350Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                        "clientId": "7cf90bbe-7974-4180-8df8-26f12e9d1e2c"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userAdmin does not belongs to this user"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Member to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Member to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Member to the system.",
        "tags": [
          "Member"
        ],
        "requestBody": {
          "description": "Member details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Member Edited"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(84)999999999"
                  },
                  "email": {
                    "type": "string",
                    "example": "test.member@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "id": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                      "createdAt": "2024-01-02T01:01:50.350Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:50.564Z",
                      "name": "Test Member Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      },
                      "member": {
                        "id": "879e3257-4e73-469a-8737-19e956ca8a32",
                        "createdAt": "2024-01-02T01:01:50.350Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:50.564Z",
                        "email": "test.member@mail.com",
                        "phone": "(84)999999999",
                        "relationship": null,
                        "userId": "47eb8e87-cd3a-4da6-abd7-de7b8b856a50",
                        "clientId": "7cf90bbe-7974-4180-8df8-26f12e9d1e2c"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error updating member = \nInvalid `prismaClient.member.update()` invocation in\n/home/rharuow/Documents/Harysson/hary-market/api/src/repositories/user/member/index.ts:51:57\n\n  48   id: string;\n  49   fields: UpdateMemberRequestBody & UpdateUserRequestBody;\n  50 }) => {\n→ 51   const { user, ...member } = await prismaClient.member.update(\nAn operation failed because it depends on one or more records that were required but not found. No 'User' record was found for a nested update on relation 'MemberToUser'."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of member to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a member to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete member based on id path parameter.",
        "tags": [
          "Member"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting member"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/clients": {
      "post": {
        "summary": "Create Client",
        "description": "Endpoint to add a new Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Client Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "house": {
                        "type": "string",
                        "example": "createClientBody 2"
                      },
                      "square": {
                        "type": "string",
                        "example": "createClientBody 2"
                      }
                    }
                  },
                  "email": {
                    "type": "string",
                    "example": "test@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                      "createdAt": "2024-01-02T01:01:51.656Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.656Z",
                      "name": "Test Client Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "55c02b8f-136b-49bf-b5d4-c0effb1766f1",
                        "createdAt": "2024-01-02T01:01:51.656Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.656Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "userId": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Address must be an object"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Clients",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list clients",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many clients to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter clients by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of clients based on optional query parameters.",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Successful getting client",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1f9f0af1-f8c1-42e0-b9bf-f40d49e67b39",
                      "createdAt": "2024-01-02T01:01:51.573Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.573Z",
                      "name": "Test Client Authenticate to client crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "b480f459-baf9-411b-8dfd-75c67abf62f9",
                        "createdAt": "2024-01-02T01:01:51.573Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.734Z",
                        "email": "testclienteditedbyclient@mail.com",
                        "phone": "(00)0000000000",
                        "userId": "1f9f0af1-f8c1-42e0-b9bf-f40d49e67b39",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                      "createdAt": "2024-01-02T01:01:51.656Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.708Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "55c02b8f-136b-49bf-b5d4-c0effb1766f1",
                        "createdAt": "2024-01-02T01:01:51.656Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.708Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "29cbe1cd-6600-4a93-9095-66bd078ce3f7",
                      "createdAt": "2024-01-02T01:01:51.796Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.796Z",
                      "name": "Test Client 1",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "9c5d3592-d149-4f53-b1f5-498efbe13c35",
                        "createdAt": "2024-01-02T01:01:51.796Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.796Z",
                        "email": "testemailclient0@mail.com",
                        "phone": null,
                        "userId": "29cbe1cd-6600-4a93-9095-66bd078ce3f7",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "e64b709a-9892-48b1-9727-15d31ff97fa2",
                      "createdAt": "2024-01-02T01:01:51.800Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.800Z",
                      "name": "Test Client 2",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "0bb51ee1-5c50-4d66-a026-485d18590a0b",
                        "createdAt": "2024-01-02T01:01:51.800Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.800Z",
                        "email": "testemailclient1@mail.com",
                        "phone": null,
                        "userId": "e64b709a-9892-48b1-9727-15d31ff97fa2",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "76a051d0-09c2-4629-877b-fad63463a79c",
                      "createdAt": "2024-01-02T01:01:51.804Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.804Z",
                      "name": "Test Client 3",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "6bd4b5b8-da98-436c-90fd-3d180cdd78a7",
                        "createdAt": "2024-01-02T01:01:51.804Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.804Z",
                        "email": "testemailclient2@mail.com",
                        "phone": null,
                        "userId": "76a051d0-09c2-4629-877b-fad63463a79c",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "808a48e2-e81a-44ac-8281-9fa5ec0722b1",
                      "createdAt": "2024-01-02T01:01:51.808Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.808Z",
                      "name": "Test Client 4",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "b3cdb39e-c9b2-4e56-a4bf-7d945ab80350",
                        "createdAt": "2024-01-02T01:01:51.808Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.808Z",
                        "email": "testemailclient3@mail.com",
                        "phone": null,
                        "userId": "808a48e2-e81a-44ac-8281-9fa5ec0722b1",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "fb0b8ec3-548e-45f8-841a-224f880c5e84",
                      "createdAt": "2024-01-02T01:01:51.812Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.812Z",
                      "name": "Test Client 5",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "08588c89-0472-45b1-b48a-33b42043142b",
                        "createdAt": "2024-01-02T01:01:51.812Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.812Z",
                        "email": "testemailclient4@mail.com",
                        "phone": null,
                        "userId": "fb0b8ec3-548e-45f8-841a-224f880c5e84",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "c8c48177-d8e1-4fc5-a5b7-4ac61e569395",
                      "createdAt": "2024-01-02T01:01:51.816Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.816Z",
                      "name": "Test Client 6",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "6fe89fcd-8100-4762-9c2f-a101de82761e",
                        "createdAt": "2024-01-02T01:01:51.816Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.816Z",
                        "email": "testemailclient5@mail.com",
                        "phone": null,
                        "userId": "c8c48177-d8e1-4fc5-a5b7-4ac61e569395",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "1ffb7597-9222-4146-acb0-d1795151317d",
                      "createdAt": "2024-01-02T01:01:51.820Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.820Z",
                      "name": "Test Client 7",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "96e4db05-47bf-4654-a7c0-080f81334b76",
                        "createdAt": "2024-01-02T01:01:51.820Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.820Z",
                        "email": "testemailclient6@mail.com",
                        "phone": null,
                        "userId": "1ffb7597-9222-4146-acb0-d1795151317d",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "eb865a73-2472-4a78-b798-7e35d02ac5b0",
                      "createdAt": "2024-01-02T01:01:51.823Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.823Z",
                      "name": "Test Client 8",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "8ee866a2-d217-4743-99e8-4640bf3a1986",
                        "createdAt": "2024-01-02T01:01:51.823Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.823Z",
                        "email": "testemailclient7@mail.com",
                        "phone": null,
                        "userId": "eb865a73-2472-4a78-b798-7e35d02ac5b0",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 2
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Clients",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of clients to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete clients based on ids query parameter.",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting clients"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/clients/{id}": {
      "get": {
        "summary": "Get Client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Client to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Client by its ID.",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Successful getting client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                      "createdAt": "2024-01-02T01:01:51.656Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.708Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "55c02b8f-136b-49bf-b5d4-c0effb1766f1",
                        "createdAt": "2024-01-02T01:01:51.656Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.708Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID does not belong to the logged-in user"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userCannot read properties of null (reading 'id')"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Client to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Client Edited"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(84)999999999"
                  },
                  "email": {
                    "type": "string",
                    "example": "test.client@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "id": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                      "createdAt": "2024-01-02T01:01:51.656Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:51.708Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "55c02b8f-136b-49bf-b5d4-c0effb1766f1",
                        "createdAt": "2024-01-02T01:01:51.656Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:51.708Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "f4a249ef-2978-46ab-9596-3bf59fb40236",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User has no permissions"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Param(s) not permitted"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of client to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a client to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete client based on id path parameter.",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting client"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/creams": {
      "post": {
        "summary": "Create Cream",
        "description": "Endpoint to add a new Cream to the system.",
        "tags": [
          "Cream"
        ],
        "requestBody": {
          "description": "Cream details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Cream",
                    "require": true
                  },
                  "amount": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "price": {
                    "type": "number",
                    "example": 9.99,
                    "require": true
                  },
                  "unit": {
                    "type": "string",
                    "example": "unit",
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "URL PHOTO",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating cream",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cream created successfully",
                  "data": {
                    "id": "2f35876c-8332-40a7-8781-2f7c972ea58c",
                    "photo": "URL PHOTO",
                    "name": "Test Cream",
                    "isSpecial": false,
                    "available": false,
                    "price": 9.99,
                    "amount": 1,
                    "unit": "unit",
                    "createdAt": "2024-01-02T01:01:52.784Z",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:52.784Z",
                    "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unique constraint failed on the fields: name"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Creams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list creams",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many creams to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter creams by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of creams based on optional query parameters.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "200": {
            "description": "Successful getting cream",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "bea851c6-24c9-47ea-8650-90754d97abc2",
                      "photo": null,
                      "name": "Test to list creams 1",
                      "isSpecial": false,
                      "available": false,
                      "price": 11,
                      "amount": 2,
                      "unit": "bag",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "7ae8d3ba-5bac-4524-ac6f-f1e84c6ba93d",
                      "photo": null,
                      "name": "Test to list creams 2",
                      "isSpecial": false,
                      "available": false,
                      "price": 12,
                      "amount": 3,
                      "unit": "box",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "29336d7f-d166-4b2c-9e26-a677d8c8b8c3",
                      "photo": null,
                      "name": "Test to list creams 3",
                      "isSpecial": false,
                      "available": false,
                      "price": 13,
                      "amount": 4,
                      "unit": "bag",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "2fa42571-9e97-4e23-9c74-fbdaee141bf7",
                      "photo": null,
                      "name": "Test to list creams 4",
                      "isSpecial": false,
                      "available": false,
                      "price": 14,
                      "amount": 5,
                      "unit": "box",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "d9e29523-1a6a-4453-8aeb-28ec85e81795",
                      "photo": null,
                      "name": "Test to list creams 5",
                      "isSpecial": false,
                      "available": false,
                      "price": 15,
                      "amount": 6,
                      "unit": "bag",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "9056bc0d-6b6c-411d-8350-e0f705bdc2a7",
                      "photo": null,
                      "name": "Test to list creams 6",
                      "isSpecial": false,
                      "available": false,
                      "price": 16,
                      "amount": 7,
                      "unit": "box",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "face78f1-3278-431b-94e3-aef3ba98241f",
                      "photo": null,
                      "name": "Test to list creams 7",
                      "isSpecial": false,
                      "available": false,
                      "price": 17,
                      "amount": 8,
                      "unit": "bag",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "4e1b3338-a274-4a3c-b1a1-f1c5d1d1c983",
                      "photo": null,
                      "name": "Test to list creams 8",
                      "isSpecial": false,
                      "available": false,
                      "price": 18,
                      "amount": 9,
                      "unit": "box",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "c4d7cd10-9415-4aef-a5c5-ac50d5b33473",
                      "photo": null,
                      "name": "Test to list creams 9",
                      "isSpecial": false,
                      "available": false,
                      "price": 19,
                      "amount": 10,
                      "unit": "bag",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    },
                    {
                      "id": "6ff55d62-84af-4347-95b2-e3baa09ee575",
                      "photo": null,
                      "name": "Test to list creams 0",
                      "isSpecial": false,
                      "available": false,
                      "price": 10,
                      "amount": 1,
                      "unit": "box",
                      "createdAt": "2024-01-02T01:01:52.710Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:52.710Z",
                      "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 3
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Filter parameters not permitted"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Creams",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of creams to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete creams based on ids query parameter.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting creams"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/creams/{id}": {
      "get": {
        "summary": "Get Cream by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Cream to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Cream by its ID.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "200": {
            "description": "Successful getting cream",
            "content": {
              "application/json": {
                "example": {
                  "id": "2f35876c-8332-40a7-8781-2f7c972ea58c",
                  "photo": "URL PHOTO",
                  "name": "Test Cream",
                  "isSpecial": false,
                  "available": false,
                  "price": 9.99,
                  "amount": 1,
                  "unit": "unit",
                  "createdAt": "2024-01-02T01:01:52.784Z",
                  "deletedAt": null,
                  "updatedAt": "2024-01-02T01:01:52.784Z",
                  "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "No Cream found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Cream",
        "description": "Endpoint to update a Cream to the system.",
        "tags": [
          "Cream"
        ],
        "requestBody": {
          "description": "Cream details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Cream Edited"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating cream",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cream updated successfully",
                  "data": {
                    "id": "2f35876c-8332-40a7-8781-2f7c972ea58c",
                    "photo": "URL PHOTO",
                    "name": "Test Cream Edited",
                    "isSpecial": false,
                    "available": false,
                    "price": 9.99,
                    "amount": 1,
                    "unit": "unit",
                    "createdAt": "2024-01-02T01:01:52.784Z",
                    "deletedAt": null,
                    "updatedAt": "2024-01-02T01:01:52.852Z",
                    "adminId": "5dcf0d8b-6ab5-4691-9bfd-73aafa7325a1"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Cream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of cream to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete cream based on id path parameter.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting cream"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/admins": {
      "post": {
        "summary": "Create Admin",
        "description": "Endpoint to add a new Admin to the system.",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "description": "Admin details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Admin Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "email": {
                    "type": "string",
                    "example": "admin@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "d0a46589-a3a1-4e0e-a553-b0fb264f642b",
                      "createdAt": "2024-01-02T01:01:55.598Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.598Z",
                      "name": "Test Admin Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "c896bd1d-c2e8-4911-afb2-a333600c4840",
                        "createdAt": "2024-01-02T01:01:55.598Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:55.598Z",
                        "email": "admin@example.com",
                        "phone": "123",
                        "userId": "d0a46589-a3a1-4e0e-a553-b0fb264f642b"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "password must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Admins",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list admins",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many admins to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter admins by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of admins based on optional query parameters.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Successful getting admin",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "f7659149-0781-4e11-a087-d54530534be6",
                      "createdAt": "2024-01-02T01:01:55.520Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.520Z",
                      "name": "Test Admin Authenticate to admin crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "bf7b9c0a-1e73-439d-b19f-608ecdf6e0dc",
                        "createdAt": "2024-01-02T01:01:55.520Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:55.645Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "f7659149-0781-4e11-a087-d54530534be6"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "d0a46589-a3a1-4e0e-a553-b0fb264f642b",
                      "createdAt": "2024-01-02T01:01:55.598Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.598Z",
                      "name": "Test Admin Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "c896bd1d-c2e8-4911-afb2-a333600c4840",
                        "createdAt": "2024-01-02T01:01:55.598Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:55.598Z",
                        "email": "admin@example.com",
                        "phone": "123",
                        "userId": "d0a46589-a3a1-4e0e-a553-b0fb264f642b"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "7066fed9-d6ee-4653-89fe-ce74216426b6",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 3",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "225722f4-7a7b-4ee8-ac2b-0f9d106a1b26",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 4",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "601646a9-0a4e-4e52-b40e-e1cf393764b1",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 5",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "36b2eb98-f139-4314-8270-d3918845d536",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 6",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "a3fc8abc-c894-4316-8d4c-be44a6bc1b6a",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 7",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "1fbffc22-bfa7-45dd-93b0-f437affc800f",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 8",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "6084b115-a834-4b06-b5a7-ebdb9810775f",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 9",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "b0b91e56-9dc1-4009-97f4-1574fbf5687e",
                      "createdAt": "2024-01-02T01:01:55.696Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.696Z",
                      "name": "Test Many Admins 10",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 2
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Admins",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of admins to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete admins based on ids query parameter.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting admins"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/admins/{id}": {
      "get": {
        "summary": "Get Admin by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Admin to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Admin to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Admin by its ID.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Successful getting admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "f7659149-0781-4e11-a087-d54530534be6",
                      "createdAt": "2024-01-02T01:01:55.520Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:55.520Z",
                      "name": "Test Admin Authenticate to admin crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      },
                      "admin": {
                        "id": "bf7b9c0a-1e73-439d-b19f-608ecdf6e0dc",
                        "createdAt": "2024-01-02T01:01:55.520Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:55.645Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "f7659149-0781-4e11-a087-d54530534be6"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userAdmin does not belongs to this user"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Admin to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Admin to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Admin to the system.",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "description": "Admin details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Admin Updated"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(00)000000000"
                  },
                  "email": {
                    "type": "string",
                    "example": "testadminupdated@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "name": "Test Admin Updated",
                      "admin": {
                        "id": "bf7b9c0a-1e73-439d-b19f-608ecdf6e0dc",
                        "createdAt": "2024-01-02T01:01:55.520Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:55.645Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "f7659149-0781-4e11-a087-d54530534be6"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of admin to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a admin to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete admin based on id path parameter.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting admin"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/clients/swap/{id}": {
      "put": {
        "summary": "SWAP role between Client and Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client that the will be swapped",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to swap the Client with its associated member.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Details to swap the client",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "stirng",
                    "example": "some-id-of-member-belongs-to-this-client"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful swapping the client",
            "content": {
              "application/json": {
                "example": {
                  "message": "Client swapped successfully",
                  "data": {
                    "user": {
                      "id": "1bcf07d5-a982-43f5-afc7-69305a8addc4",
                      "createdAt": "2024-01-02T01:01:54.684Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:54.788Z",
                      "name": "Test Member to swap between Client and Member",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "e49a3e63-9020-4544-ab98-c1a9980671bb",
                        "createdAt": "2024-01-02T01:01:54.788Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:54.788Z",
                        "email": "member@example.com",
                        "phone": "(00) 000000000",
                        "userId": "1bcf07d5-a982-43f5-afc7-69305a8addc4",
                        "addressId": null,
                        "address": {
                          "id": "7ae6ea2a-bc46-4312-9d9a-77f4b9ebfcc5",
                          "createdAt": "2024-01-02T01:01:54.788Z",
                          "deletedAt": null,
                          "updatedAt": "2024-01-02T01:01:54.788Z",
                          "square": "0.9372033812479164",
                          "house": "0.32614269989824973",
                          "clientId": "e49a3e63-9020-4544-ab98-c1a9980671bb"
                        }
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Member not belongs to this client."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "memberId must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/signin": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticate and sign in a user.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "User credentials for sign-in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "securepassword"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful sign-in",
            "content": {
              "application/json": {
                "example": {
                  "message": "Token session created successfully",
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImUxYjA5NWZmLTM1N2EtNDBiZS04N2NlLTBkODYxN2I2YzkyNCIsIm5hbWUiOiJUZXN0IFVzZXIgQWRtaW4gdG8gc2lnbiBpbiB0ZXN0Iiwicm9sZUlkIjoiNjViY2NiNDAtODIyMS00NjdiLWJlYTYtYzliYTg0YWRhYmY0Iiwicm9sZSI6eyJpZCI6IjY1YmNjYjQwLTgyMjEtNDY3Yi1iZWE2LWM5YmE4NGFkYWJmNCIsImNyZWF0ZWRBdCI6IjIwMjMtMTItMDJUMjA6NDY6MjMuODgwWiIsImRlbGV0ZWRBdCI6bnVsbCwidXBkYXRlZEF0IjoiMjAyMy0xMi0wMlQyMDo0NjoyMy44ODBaIiwibmFtZSI6IkFETUlOIn0sImlhdCI6MTcwNDE1NzMxNywiZXhwIjoxNzA0MTU3MzIyfQ.7I_y_1B1D7VQ6-kTXyXJ7f4pS4yopciA7TJxlKv67W4",
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImUxYjA5NWZmLTM1N2EtNDBiZS04N2NlLTBkODYxN2I2YzkyNCIsIm5hbWUiOiJUZXN0IFVzZXIgQWRtaW4gdG8gc2lnbiBpbiB0ZXN0Iiwicm9sZUlkIjoiNjViY2NiNDAtODIyMS00NjdiLWJlYTYtYzliYTg0YWRhYmY0Iiwicm9sZSI6eyJpZCI6IjY1YmNjYjQwLTgyMjEtNDY3Yi1iZWE2LWM5YmE4NGFkYWJmNCIsImNyZWF0ZWRBdCI6IjIwMjMtMTItMDJUMjA6NDY6MjMuODgwWiIsImRlbGV0ZWRBdCI6bnVsbCwidXBkYXRlZEF0IjoiMjAyMy0xMi0wMlQyMDo0NjoyMy44ODBaIiwibmFtZSI6IkFETUlOIn0sImlhdCI6MTcwNDE1NzMxNywiZXhwIjoxNzA0MTU3MzI3fQ.9Zi6P1_J3ACDpEZ1DnyZL3RZtfqHR2aWiyxNNc3j90g",
                  "user": {
                    "id": "e1b095ff-357a-40be-87ce-0d8617b6c924",
                    "name": "Test User Admin to sign in test",
                    "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                    "role": {
                      "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "createdAt": "2023-12-02T20:46:23.880Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-02T20:46:23.880Z",
                      "name": "ADMIN"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Token with user invalid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Param(s) not permitted"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resources/users/clients/{id}/change-address": {
      "put": {
        "summary": "Update Address Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client that address to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update Address belongs to a Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client's Address details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "house": {
                        "type": "stirng",
                        "example": "new house create by member"
                      },
                      "square": {
                        "type": "stirng",
                        "example": "new house create by member"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating address of the client",
            "content": {
              "application/json": {
                "example": {
                  "message": "Client's address updated successfully",
                  "data": {
                    "user": {
                      "id": "4c537441-aeee-44a9-a73c-e9d01d62512d",
                      "createdAt": "2024-01-02T01:01:56.430Z",
                      "deletedAt": null,
                      "updatedAt": "2024-01-02T01:01:56.430Z",
                      "name": "Test Client to change address",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "6b292471-24ce-410f-b321-6b3afdd7cff5",
                        "createdAt": "2024-01-02T01:01:56.430Z",
                        "deletedAt": null,
                        "updatedAt": "2024-01-02T01:01:56.430Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "userId": "4c537441-aeee-44a9-a73c-e9d01d62512d",
                        "addressId": null,
                        "user": {
                          "id": "4c537441-aeee-44a9-a73c-e9d01d62512d",
                          "createdAt": "2024-01-02T01:01:56.430Z",
                          "deletedAt": null,
                          "updatedAt": "2024-01-02T01:01:56.430Z",
                          "name": "Test Client to change address",
                          "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                          "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                          "adminId": null,
                          "clientId": null,
                          "memberId": null,
                          "role": {
                            "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                            "createdAt": "2023-12-02T20:46:23.884Z",
                            "deletedAt": null,
                            "updatedAt": "2023-12-02T20:46:23.884Z",
                            "name": "CLIENT"
                          }
                        },
                        "address": {
                          "id": "580d4eb4-6c35-4411-bdf4-b830435ed3b3",
                          "createdAt": "2024-01-02T01:01:56.430Z",
                          "deletedAt": null,
                          "updatedAt": "2024-01-02T01:01:56.502Z",
                          "square": "new house create by admin",
                          "house": "new house create by admin",
                          "clientId": "6b292471-24ce-410f-b321-6b3afdd7cff5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Id mismatch in user authenticated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User has no permissions"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Address house must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1": {
      "get": {
        "summary": "Welcome router",
        "description": "This router return the 'welcome'",
        "tags": [
          "Wellcome"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Welcome to meu açai API"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
