{
  "openapi": "3.0.0",
  "info": {
    "title": "Ice cream market.",
    "description": "This project it's api to feed the ice cream market application service.",
    "contact": {
      "phone": "+55(84)981758502",
      "email": "haryssonsoares@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "If you run this project locally"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ROLE": {
        "type": "string",
        "enum": [
          "ADMIN",
          "MEMBER",
          "CLIENT"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "$ref": "#/components/schemas/ROLE"
          },
          "user": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "adminId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "admin": {
            "$ref": "#/components/schemas/Admin"
          },
          "clientId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "memberId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "toppings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Topping"
            }
          },
          "creams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cream"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "addressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "clientId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "square": {
            "type": "string"
          },
          "house": {
            "type": "string"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          }
        }
      },
      "Topping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "isSpecial": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "amount": {
            "type": "integer"
          },
          "unit": {
            "type": "string",
            "default": "Unidades"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      },
      "Cream": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isSpecial": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "amount": {
            "type": "integer"
          },
          "unit": {
            "type": "string",
            "default": "Unidades"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "size": {
            "type": "string",
            "unique": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "photo": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          },
          "price": {
            "type": "number"
          },
          "maxCreamsAllowed": {
            "type": "integer"
          },
          "maxToppingsAllowed": {
            "type": "integer"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/resources/users/members": {
      "post": {
        "summary": "Create Member",
        "description": "Endpoint to add a new Member to the system.",
        "tags": [
          "Member"
        ],
        "requestBody": {
          "description": "Member details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Member Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "email": {
                    "type": "string",
                    "example": "test@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                      "createdAt": "2023-12-29T01:28:29.112Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.112Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "8a41be0c-9ef3-4a99-bb23-cf2d252d5c99",
                        "createdAt": "2023-12-29T01:28:29.112Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.112Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                        "clientId": "fae2e7f3-8842-4314-8b98-a575496cf4cd"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authorization is missing"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "name must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Members",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list members",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many members to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter members by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of members based on optional query parameters.",
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "Successful getting member",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "d78f1284-5f9a-4fd1-9f5d-e1325da73688",
                      "createdAt": "2023-12-29T01:28:29.014Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.014Z",
                      "name": "Test Member Authenticate to member crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "abff61b7-480a-425b-b156-d2787732aef7",
                        "createdAt": "2023-12-29T01:28:29.014Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.014Z",
                        "email": null,
                        "phone": null,
                        "relationship": null,
                        "userId": "d78f1284-5f9a-4fd1-9f5d-e1325da73688",
                        "clientId": "788da2b8-f9f7-4c29-9e9c-d2a1730a0f41"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    },
                    {
                      "id": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                      "createdAt": "2023-12-29T01:28:29.112Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.112Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "8a41be0c-9ef3-4a99-bb23-cf2d252d5c99",
                        "createdAt": "2023-12-29T01:28:29.112Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.112Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                        "clientId": "fae2e7f3-8842-4314-8b98-a575496cf4cd"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    },
                    {
                      "id": "f113d4cf-bd9f-4e06-bb55-083e91c8f80f",
                      "createdAt": "2023-12-29T01:28:29.164Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.164Z",
                      "name": "Test Member Created For Client",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "member": {
                        "id": "8459aeb6-cc44-4604-bf99-4df138e544fe",
                        "createdAt": "2023-12-29T01:28:29.164Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.164Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "f113d4cf-bd9f-4e06-bb55-083e91c8f80f",
                        "clientId": "788da2b8-f9f7-4c29-9e9c-d2a1730a0f41"
                      },
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      }
                    }
                  ],
                  "hasNextPage": false,
                  "page": 1,
                  "totalPages": 1
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Authorization is missing"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Members",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of members to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete members based on ids query parameter.",
        "tags": [
          "Member"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting members"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/members/{id}": {
      "get": {
        "summary": "Get Member by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Member to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Member to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Member by its ID.",
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "Successful getting member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                      "createdAt": "2023-12-29T01:28:29.112Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.112Z",
                      "name": "Test Member Created For Admin",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      },
                      "member": {
                        "id": "8a41be0c-9ef3-4a99-bb23-cf2d252d5c99",
                        "createdAt": "2023-12-29T01:28:29.112Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.112Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "relationship": null,
                        "userId": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                        "clientId": "fae2e7f3-8842-4314-8b98-a575496cf4cd"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userAdmin does not belongs to this user"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Member to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Member to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Member to the system.",
        "tags": [
          "Member"
        ],
        "requestBody": {
          "description": "Member details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Member Edited"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(84)999999999"
                  },
                  "email": {
                    "type": "string",
                    "example": "test.member@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating member",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "id": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                      "createdAt": "2023-12-29T01:28:29.112Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:29.323Z",
                      "name": "Test Member Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "0259d89f-2180-406d-a52a-ffbed9f2b52b",
                        "createdAt": "2023-12-02T20:46:23.887Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.887Z",
                        "name": "MEMBER"
                      },
                      "member": {
                        "id": "8a41be0c-9ef3-4a99-bb23-cf2d252d5c99",
                        "createdAt": "2023-12-29T01:28:29.112Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:29.323Z",
                        "email": "test.member@mail.com",
                        "phone": "(84)999999999",
                        "relationship": null,
                        "userId": "9ad937a7-ff63-47b7-bac9-1bc343212c53",
                        "clientId": "fae2e7f3-8842-4314-8b98-a575496cf4cd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error updating member = \nInvalid `prismaClient.member.update()` invocation in\n/home/rharuow/Documents/Harysson/hary-market/api/src/repositories/user/member/index.ts:51:57\n\n  48   id: string;\n  49   fields: UpdateMemberRequestBody & UpdateUserRequestBody;\n  50 }) => {\n→ 51   const { user, ...member } = await prismaClient.member.update(\nAn operation failed because it depends on one or more records that were required but not found. No 'User' record was found for a nested update on relation 'MemberToUser'."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of member to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a member to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete member based on id path parameter.",
        "tags": [
          "Member"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting member"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/clients": {
      "post": {
        "summary": "Create Client",
        "description": "Endpoint to add a new Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Client Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "house": {
                        "type": "string",
                        "example": "createClientBody 2"
                      },
                      "square": {
                        "type": "string",
                        "example": "createClientBody 2"
                      }
                    }
                  },
                  "email": {
                    "type": "string",
                    "example": "test@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                      "createdAt": "2023-12-29T01:28:31.025Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.025Z",
                      "name": "Test Client Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "e9a8b307-8033-4a58-b623-066cb7a25585",
                        "createdAt": "2023-12-29T01:28:31.025Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.025Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "userId": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Address must be an object"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Clients",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list clients",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many clients to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter clients by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of clients based on optional query parameters.",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Successful getting client",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0205ec35-f3be-4a80-8881-cfd0f6e8abf2",
                      "createdAt": "2023-12-29T01:28:30.946Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:30.946Z",
                      "name": "Test Client Authenticate to client crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "a402e3b0-fdea-41af-97a1-eaeb8b15bbd7",
                        "createdAt": "2023-12-29T01:28:30.946Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.111Z",
                        "email": "testclienteditedbyclient@mail.com",
                        "phone": "(00)0000000000",
                        "userId": "0205ec35-f3be-4a80-8881-cfd0f6e8abf2",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                      "createdAt": "2023-12-29T01:28:31.025Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.082Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "e9a8b307-8033-4a58-b623-066cb7a25585",
                        "createdAt": "2023-12-29T01:28:31.025Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.082Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "c873e322-824a-4185-b188-0794cf4bda29",
                      "createdAt": "2023-12-29T01:28:31.195Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.195Z",
                      "name": "Test Client 1",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "9c63056c-97a2-4c07-9d5e-51d7dadf9bac",
                        "createdAt": "2023-12-29T01:28:31.195Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.195Z",
                        "email": "testemailclient0@mail.com",
                        "phone": null,
                        "userId": "c873e322-824a-4185-b188-0794cf4bda29",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "cee27241-8277-48c1-89b0-d66a275edc8c",
                      "createdAt": "2023-12-29T01:28:31.200Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.200Z",
                      "name": "Test Client 2",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "6c40af17-af01-47c0-ac59-6930e7cc606b",
                        "createdAt": "2023-12-29T01:28:31.200Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.200Z",
                        "email": "testemailclient1@mail.com",
                        "phone": null,
                        "userId": "cee27241-8277-48c1-89b0-d66a275edc8c",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "c8a7fd35-e77c-4899-b611-4ea7f837ba81",
                      "createdAt": "2023-12-29T01:28:31.204Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.204Z",
                      "name": "Test Client 3",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "bb270b3c-3232-4c01-b0a7-7c3f2d84f70d",
                        "createdAt": "2023-12-29T01:28:31.204Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.204Z",
                        "email": "testemailclient2@mail.com",
                        "phone": null,
                        "userId": "c8a7fd35-e77c-4899-b611-4ea7f837ba81",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "93a288b8-5b51-4f60-9948-8dd689e4f31f",
                      "createdAt": "2023-12-29T01:28:31.209Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.209Z",
                      "name": "Test Client 4",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "4d6c3bcd-049f-46b7-ae8b-26d7c5b8cfcb",
                        "createdAt": "2023-12-29T01:28:31.209Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.209Z",
                        "email": "testemailclient3@mail.com",
                        "phone": null,
                        "userId": "93a288b8-5b51-4f60-9948-8dd689e4f31f",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "8ebb4f35-1c85-4bc4-81de-123e25f4c957",
                      "createdAt": "2023-12-29T01:28:31.219Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.219Z",
                      "name": "Test Client 5",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "a6bab31e-184b-4cda-bd66-40d848bfc38a",
                        "createdAt": "2023-12-29T01:28:31.219Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.219Z",
                        "email": "testemailclient4@mail.com",
                        "phone": null,
                        "userId": "8ebb4f35-1c85-4bc4-81de-123e25f4c957",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "c177de16-b06f-49d3-b16a-578ef3eb2d00",
                      "createdAt": "2023-12-29T01:28:31.229Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.229Z",
                      "name": "Test Client 6",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "156fff7c-2fed-4c5e-9342-e841bd5a33f4",
                        "createdAt": "2023-12-29T01:28:31.229Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.229Z",
                        "email": "testemailclient5@mail.com",
                        "phone": null,
                        "userId": "c177de16-b06f-49d3-b16a-578ef3eb2d00",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "3461a6be-4ef8-4a0a-bbfa-df72229fbbc4",
                      "createdAt": "2023-12-29T01:28:31.239Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.239Z",
                      "name": "Test Client 7",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "eaeea87b-83d4-4c7f-8a6d-98cb34e437c6",
                        "createdAt": "2023-12-29T01:28:31.239Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.239Z",
                        "email": "testemailclient6@mail.com",
                        "phone": null,
                        "userId": "3461a6be-4ef8-4a0a-bbfa-df72229fbbc4",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    },
                    {
                      "id": "03e5d382-a21f-4df1-9551-7672cd25c94a",
                      "createdAt": "2023-12-29T01:28:31.249Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.249Z",
                      "name": "Test Client 8",
                      "password": "123",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "2b7028d1-dc4c-4b05-98fd-730d3b56151e",
                        "createdAt": "2023-12-29T01:28:31.249Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.249Z",
                        "email": "testemailclient7@mail.com",
                        "phone": null,
                        "userId": "03e5d382-a21f-4df1-9551-7672cd25c94a",
                        "addressId": null
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 2
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Clients",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of clients to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete clients based on ids query parameter.",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting clients"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/clients/{id}": {
      "get": {
        "summary": "Get Client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Client to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Client by its ID.",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Successful getting client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                      "createdAt": "2023-12-29T01:28:31.025Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.082Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "e9a8b307-8033-4a58-b623-066cb7a25585",
                        "createdAt": "2023-12-29T01:28:31.025Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.082Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID does not belong to the logged-in user"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userCannot read properties of null (reading 'id')"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Client to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Client Edited"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(84)999999999"
                  },
                  "email": {
                    "type": "string",
                    "example": "test.client@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating client",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "id": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                      "createdAt": "2023-12-29T01:28:31.025Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:31.082Z",
                      "name": "Test Client Edited",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "e9a8b307-8033-4a58-b623-066cb7a25585",
                        "createdAt": "2023-12-29T01:28:31.025Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:31.082Z",
                        "email": "test.client@mail.com",
                        "phone": "(84)999999999",
                        "userId": "e6cefa1e-ae5c-4e0f-9afc-3db94734ea80",
                        "addressId": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User has no permissions"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Param(s) not permitted"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of client to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a client to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete client based on id path parameter.",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting client"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/creams": {
      "post": {
        "summary": "Create Cream",
        "description": "Endpoint to add a new Cream to the system.",
        "tags": [
          "Cream"
        ],
        "requestBody": {
          "description": "Cream details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Cream",
                    "require": true
                  },
                  "amount": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "price": {
                    "type": "number",
                    "example": 9.99,
                    "require": true
                  },
                  "unit": {
                    "type": "string",
                    "example": "unit",
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "URL PHOTO",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating cream",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cream created successfully",
                  "data": {
                    "id": "d9c6d784-d5c2-489d-b1ce-47694715496e",
                    "photo": "URL PHOTO",
                    "name": "Test Cream",
                    "isSpecial": false,
                    "available": false,
                    "price": 9.99,
                    "amount": 1,
                    "unit": "unit",
                    "createdAt": "2023-12-29T01:28:32.869Z",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:32.869Z",
                    "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unique constraint failed on the fields: name"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Creams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list creams",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many creams to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter creams by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of creams based on optional query parameters.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "200": {
            "description": "Successful getting cream",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1641895f-a662-4d7e-b3e3-89418ab2b02b",
                      "photo": null,
                      "name": "Test to list creams 3",
                      "isSpecial": false,
                      "available": false,
                      "price": 13,
                      "amount": 4,
                      "unit": "bag",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "0089dad4-0f14-4369-bace-753bc19437a9",
                      "photo": null,
                      "name": "Test to list creams 4",
                      "isSpecial": false,
                      "available": false,
                      "price": 14,
                      "amount": 5,
                      "unit": "box",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "b898a009-98ef-4450-b247-0b366aa6bb46",
                      "photo": null,
                      "name": "Test to list creams 5",
                      "isSpecial": false,
                      "available": false,
                      "price": 15,
                      "amount": 6,
                      "unit": "bag",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "061e56da-66ee-412c-aa78-1c8f15d71e2a",
                      "photo": null,
                      "name": "Test to list creams 6",
                      "isSpecial": false,
                      "available": false,
                      "price": 16,
                      "amount": 7,
                      "unit": "box",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "d3087765-c881-4bcc-b5d7-9a0d3fa174f9",
                      "photo": null,
                      "name": "Test to list creams 7",
                      "isSpecial": false,
                      "available": false,
                      "price": 17,
                      "amount": 8,
                      "unit": "bag",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "95c749e9-68e9-48ab-8481-b23f35a4364b",
                      "photo": null,
                      "name": "Test to list creams 8",
                      "isSpecial": false,
                      "available": false,
                      "price": 18,
                      "amount": 9,
                      "unit": "box",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "24705703-69a9-4bfd-90ea-a76db54f7b96",
                      "photo": null,
                      "name": "Test to list creams 9",
                      "isSpecial": false,
                      "available": false,
                      "price": 19,
                      "amount": 10,
                      "unit": "bag",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "8a5dd456-7d97-4934-829b-433b5abf31e8",
                      "photo": null,
                      "name": "Test to list creams 10",
                      "isSpecial": false,
                      "available": false,
                      "price": 20,
                      "amount": 11,
                      "unit": "box",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "d5dc6438-738f-437a-9b14-da4f3bcff384",
                      "photo": null,
                      "name": "Test to list creams 11",
                      "isSpecial": false,
                      "available": false,
                      "price": 21,
                      "amount": 12,
                      "unit": "bag",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    },
                    {
                      "id": "9f509334-909b-44f6-ae51-e41886cb3cd4",
                      "photo": null,
                      "name": "Test to list creams 2",
                      "isSpecial": false,
                      "available": false,
                      "price": 12,
                      "amount": 3,
                      "unit": "box",
                      "createdAt": "2023-12-29T01:28:32.805Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:32.805Z",
                      "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 3
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Filter parameters not permitted"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Creams",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of creams to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete creams based on ids query parameter.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting creams"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/creams/{id}": {
      "get": {
        "summary": "Get Cream by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Cream to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Cream by its ID.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "200": {
            "description": "Successful getting cream",
            "content": {
              "application/json": {
                "example": {
                  "id": "d9c6d784-d5c2-489d-b1ce-47694715496e",
                  "photo": "URL PHOTO",
                  "name": "Test Cream",
                  "isSpecial": false,
                  "available": false,
                  "price": 9.99,
                  "amount": 1,
                  "unit": "unit",
                  "createdAt": "2023-12-29T01:28:32.869Z",
                  "deletedAt": null,
                  "updatedAt": "2023-12-29T01:28:32.869Z",
                  "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "No Cream found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Cream",
        "description": "Endpoint to update a Cream to the system.",
        "tags": [
          "Cream"
        ],
        "requestBody": {
          "description": "Cream details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Cream Edited"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating cream",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cream updated successfully",
                  "data": {
                    "id": "d9c6d784-d5c2-489d-b1ce-47694715496e",
                    "photo": "URL PHOTO",
                    "name": "Test Cream Edited",
                    "isSpecial": false,
                    "available": false,
                    "price": 9.99,
                    "amount": 1,
                    "unit": "unit",
                    "createdAt": "2023-12-29T01:28:32.869Z",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:32.949Z",
                    "adminId": "463c85af-9e24-4769-aa3b-6942f5d2c3d8"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Cream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of cream to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete cream based on id path parameter.",
        "tags": [
          "Cream"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting cream"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/toppings": {
      "post": {
        "summary": "Create Topping",
        "description": "Endpoint to add a new Topping to the system.",
        "tags": [
          "Topping"
        ],
        "requestBody": {
          "description": "Topping details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Topping created as Admin",
                    "require": true
                  },
                  "amount": {
                    "type": "number",
                    "example": 2,
                    "require": true
                  },
                  "price": {
                    "type": "number",
                    "example": 12.99,
                    "require": true
                  },
                  "unit": {
                    "type": "string",
                    "example": "unidade",
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "URL-PHOTO",
                    "require": false
                  },
                  "available": {
                    "type": "boolean",
                    "example": true,
                    "require": false
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": false,
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping created successfully",
                  "data": {
                    "id": "68d509b5-15f1-4b09-a010-39c3cb7040d9",
                    "createdAt": "2023-12-29T01:28:34.404Z",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:34.404Z",
                    "name": "Test Topping created as Admin",
                    "photo": "URL-PHOTO",
                    "isSpecial": false,
                    "available": true,
                    "price": 12.99,
                    "amount": 2,
                    "unit": "unidade",
                    "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "amount must be a number and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Toppings",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list toppings",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many toppings to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter toppings by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of toppings based on optional query parameters.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "200": {
            "description": "Successful getting topping",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "68d509b5-15f1-4b09-a010-39c3cb7040d9",
                      "createdAt": "2023-12-29T01:28:34.404Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.404Z",
                      "name": "Test Topping created as Admin",
                      "photo": "URL-PHOTO",
                      "isSpecial": false,
                      "available": true,
                      "price": 12.99,
                      "amount": 2,
                      "unit": "unidade",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "2dee7e77-5554-478a-8e3e-c6e9944f95ef",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating odd many 1",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 1,
                      "amount": 1,
                      "unit": "litros",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "4a8cb79c-cb82-421c-97ca-20be0b6a0f13",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating even many 6",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 106,
                      "amount": 26,
                      "unit": "bag",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "c4802993-7925-4f7d-9398-ade2342d03ec",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating odd many 3",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 3,
                      "amount": 3,
                      "unit": "litros",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "72f0042f-875c-40ba-ac18-1656a21d18f6",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating even many 4",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 104,
                      "amount": 24,
                      "unit": "bag",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "288f920a-9e1c-4ef2-9f98-4e1660afc41f",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating odd many 5",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 5,
                      "amount": 5,
                      "unit": "litros",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "834db362-41cc-4700-ba06-0ac650fc9a5b",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating even many 2",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 102,
                      "amount": 22,
                      "unit": "bag",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "e2c22e18-3709-45fb-b00f-b780d4474de5",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating odd many 7",
                      "photo": null,
                      "isSpecial": false,
                      "available": false,
                      "price": 7,
                      "amount": 7,
                      "unit": "litros",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "4d87facf-6c3f-4f68-afd2-ac1069bb9d6c",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating even many 8",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 108,
                      "amount": 28,
                      "unit": "bag",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    },
                    {
                      "id": "1ad4344d-e1cd-4d99-a337-fcc9cb7d25bb",
                      "createdAt": "2023-12-29T01:28:34.487Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:34.487Z",
                      "name": "Test topping creating even many 0",
                      "photo": null,
                      "isSpecial": true,
                      "available": true,
                      "price": 100,
                      "amount": 20,
                      "unit": "bag",
                      "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 3
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown field(s)"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Toppings",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of toppings to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete toppings based on ids query parameter.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting toppings"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/toppings/{id}": {
      "get": {
        "summary": "Get Topping by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Topping to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Topping by its ID.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "200": {
            "description": "Successful getting topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping retrieved successfully",
                  "data": {
                    "id": "68d509b5-15f1-4b09-a010-39c3cb7040d9",
                    "createdAt": "2023-12-29T01:28:34.404Z",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:34.404Z",
                    "name": "Test Topping created as Admin",
                    "photo": "URL-PHOTO",
                    "isSpecial": false,
                    "available": true,
                    "price": 12.99,
                    "amount": 2,
                    "unit": "unidade",
                    "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error to retrivier topping: No Topping found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Topping",
        "description": "Endpoint to update a Topping to the system.",
        "tags": [
          "Topping"
        ],
        "requestBody": {
          "description": "Topping details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Topping updated as Admin"
                  },
                  "amount": {
                    "type": "number",
                    "example": 2
                  },
                  "price": {
                    "type": "number",
                    "example": 12.5
                  },
                  "unit": {
                    "type": "string",
                    "example": "unit"
                  },
                  "photo": {
                    "type": "string",
                    "example": "some-photo.jpg"
                  },
                  "available": {
                    "type": "boolean",
                    "example": false
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating topping",
            "content": {
              "application/json": {
                "example": {
                  "message": "Topping updated successfully",
                  "data": {
                    "id": "68d509b5-15f1-4b09-a010-39c3cb7040d9",
                    "createdAt": "2023-12-29T01:28:34.404Z",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:34.586Z",
                    "name": "Test Topping updated as Admin",
                    "photo": "some-photo.jpg",
                    "isSpecial": true,
                    "available": false,
                    "price": 12.5,
                    "amount": 2,
                    "unit": "unit",
                    "adminId": "96bc57e3-01ac-43b9-a3cf-920d5e86b52a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Topping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of topping to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete topping based on id path parameter.",
        "tags": [
          "Topping"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting topping"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/products": {
      "post": {
        "summary": "Create Product",
        "description": "Endpoint to add a new Product to the system.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "Product details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "example": 1.99,
                    "require": true
                  },
                  "size": {
                    "type": "number",
                    "example": "small",
                    "require": true
                  },
                  "maxCreamsAllowed": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "maxToppingsAllowed": {
                    "type": "number",
                    "example": 1,
                    "require": true
                  },
                  "photo": {
                    "type": "string",
                    "example": "url-photo",
                    "require": false
                  },
                  "name": {
                    "type": "string",
                    "example": "TEST PRODUCT NAME CREATED",
                    "require": false
                  },
                  "available": {
                    "type": "boolean",
                    "example": true,
                    "require": false
                  }
                },
                "required": [
                  "maxCreamsAllowed",
                  "maxToppingsAllowed",
                  "price",
                  "size"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product created successfully",
                  "data": {
                    "id": "acdbe41f-2767-497b-bfb3-44bd41d4025b",
                    "size": "small",
                    "name": "TEST PRODUCT NAME CREATED",
                    "createdAt": "2023-12-29T01:28:35.846Z",
                    "photo": "url-photo",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:35.846Z",
                    "available": true,
                    "price": 1.99,
                    "maxCreamsAllowed": 1,
                    "maxToppingsAllowed": 1,
                    "adminId": "1d470b57-8224-4a39-8555-5315751c471a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "price must be a float number and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list products",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many products to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter products by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of products based on optional query parameters.",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Successful getting product",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Products",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of products to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete products based on ids query parameter.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting products"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/products/{id}": {
      "get": {
        "summary": "Get Product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Product to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Product by its ID.",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Successful getting product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product retrieved successfully",
                  "data": {
                    "id": "acdbe41f-2767-497b-bfb3-44bd41d4025b",
                    "size": "small",
                    "name": "TEST PRODUCT NAME CREATED",
                    "createdAt": "2023-12-29T01:28:35.846Z",
                    "photo": "url-photo",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:35.846Z",
                    "available": true,
                    "price": 1.99,
                    "maxCreamsAllowed": 1,
                    "maxToppingsAllowed": 1,
                    "adminId": "1d470b57-8224-4a39-8555-5315751c471a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized: No access token provided"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error getting product = No Product found"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Product",
        "description": "Endpoint to update a Product to the system.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "Product details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Product updated as Admin"
                  },
                  "price": {
                    "type": "number",
                    "example": 12.5
                  },
                  "photo": {
                    "type": "string",
                    "example": "some-photo.jpg"
                  },
                  "size": {
                    "type": "string",
                    "example": "Update size product test"
                  },
                  "maxCreamsAllowed": {
                    "type": "string",
                    "example": 2
                  },
                  "maxToppingsAllowed": {
                    "type": "string",
                    "example": 2
                  },
                  "available": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "name",
                  "amount",
                  "price",
                  "unit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating product",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product updated successfully",
                  "data": {
                    "id": "acdbe41f-2767-497b-bfb3-44bd41d4025b",
                    "size": "Update size product test",
                    "name": "Test Product updated as Admin",
                    "createdAt": "2023-12-29T01:28:35.846Z",
                    "photo": "some-photo.jpg",
                    "deletedAt": null,
                    "updatedAt": "2023-12-29T01:28:36.049Z",
                    "available": false,
                    "price": 12.5,
                    "maxCreamsAllowed": 2,
                    "maxToppingsAllowed": 2,
                    "adminId": "1d470b57-8224-4a39-8555-5315751c471a"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete product based on id path parameter.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting product"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/admins": {
      "post": {
        "summary": "Create Admin",
        "description": "Endpoint to add a new Admin to the system.",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "description": "Admin details for creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Admin Created",
                    "require": true
                  },
                  "password": {
                    "type": "string",
                    "example": "123",
                    "require": true
                  },
                  "email": {
                    "type": "string",
                    "example": "admin@example.com",
                    "require": false
                  },
                  "phone": {
                    "type": "string",
                    "example": "123",
                    "require": false
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creating admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "user": {
                      "id": "57645b7a-8969-4e26-9cc9-7074bb2d7867",
                      "createdAt": "2023-12-29T01:28:37.200Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.200Z",
                      "name": "Test Admin Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "3d5dc888-c775-400e-9645-099cade4a96f",
                        "createdAt": "2023-12-29T01:28:37.200Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:37.200Z",
                        "email": "admin@example.com",
                        "phone": "123",
                        "userId": "57645b7a-8969-4e26-9cc9-7074bb2d7867"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "password must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Admins",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to list admins",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "How many admins to return per page",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by some field table",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt:asc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter admins by some fields table",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name:like:some text here,id:some id here,price:gt:1000,amount:lt:5,createdAt:egt:some date ISO"
          }
        ],
        "description": "Retrieve a list of admins based on optional query parameters.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Successful getting admin",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7ee0f412-8ab9-4d66-8855-ee5af4bbcd96",
                      "createdAt": "2023-12-29T01:28:37.129Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.129Z",
                      "name": "Test Admin Authenticate to admin crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "a3ef8d79-2266-40b8-bc98-68d2235c43e4",
                        "createdAt": "2023-12-29T01:28:37.129Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:37.258Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "7ee0f412-8ab9-4d66-8855-ee5af4bbcd96"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "57645b7a-8969-4e26-9cc9-7074bb2d7867",
                      "createdAt": "2023-12-29T01:28:37.200Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.200Z",
                      "name": "Test Admin Created",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": {
                        "id": "3d5dc888-c775-400e-9645-099cade4a96f",
                        "createdAt": "2023-12-29T01:28:37.200Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:37.200Z",
                        "email": "admin@example.com",
                        "phone": "123",
                        "userId": "57645b7a-8969-4e26-9cc9-7074bb2d7867"
                      },
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "404f3da4-a3a8-4287-a27b-4ac02a9c8cfa",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 1",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "14b34316-511a-4ac5-8663-452b74e63f96",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 2",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "01acc6cf-268b-49bc-b1a5-dce9af1bd586",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 3",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "8c0ca651-e345-45b2-9534-2a1284e6f5df",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 4",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "d55d5b59-84f4-4a1f-ad18-556c153cf233",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 5",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "8c34bc9e-a50a-4163-8aad-c942782ec7ab",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 6",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "558769e8-bbc0-41ba-a5ea-c55e895153ba",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 7",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    },
                    {
                      "id": "765f6a48-f2fe-4429-81b1-129a4c2da33b",
                      "createdAt": "2023-12-29T01:28:37.330Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.330Z",
                      "name": "Test Many Admins 8",
                      "password": "123",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "admin": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      }
                    }
                  ],
                  "hasNextPage": true,
                  "page": 1,
                  "totalPages": 2
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "invalid parameters"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Many Admins",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of admins to delete",
            "required": true,
            "schema": {
              "type": "string",
              "default": "id-1,id-2"
            }
          }
        ],
        "description": "Delete admins based on ids query parameter.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting admins"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/{userId}/admins/{id}": {
      "get": {
        "summary": "Get Admin by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Admin to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Admin to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieve details of a specific Admin by its ID.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Successful getting admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User founded successfully",
                  "data": {
                    "user": {
                      "id": "7ee0f412-8ab9-4d66-8855-ee5af4bbcd96",
                      "createdAt": "2023-12-29T01:28:37.129Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:37.129Z",
                      "name": "Test Admin Authenticate to admin crud test",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                        "createdAt": "2023-12-02T20:46:23.880Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.880Z",
                        "name": "ADMIN"
                      },
                      "admin": {
                        "id": "a3ef8d79-2266-40b8-bc98-68d2235c43e4",
                        "createdAt": "2023-12-29T01:28:37.129Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:37.258Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "7ee0f412-8ab9-4d66-8855-ee5af4bbcd96"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "message": "Error get a userAdmin does not belongs to this user"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Admin to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the User that is a Admin to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update a Admin to the system.",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "description": "Admin details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test Admin Updated"
                  },
                  "phone": {
                    "type": "string",
                    "example": "(00)000000000"
                  },
                  "email": {
                    "type": "string",
                    "example": "testadminupdated@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "user": {
                      "name": "Test Admin Updated",
                      "admin": {
                        "id": "a3ef8d79-2266-40b8-bc98-68d2235c43e4",
                        "createdAt": "2023-12-29T01:28:37.129Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:37.258Z",
                        "email": "testadminupdated@mail.com",
                        "phone": "(00)000000000",
                        "userId": "7ee0f412-8ab9-4d66-8855-ee5af4bbcd96"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "No authorization required"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "At least one property must exist in the request body"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of admin to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of user that is a admin to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete admin based on id path parameter.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "204": {
            "description": "Successful deleting admin"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/clients/swap/{id}": {
      "put": {
        "summary": "SWAP role between Client and Member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client that the will be swapped",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to swap the Client with its associated member.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Details to swap the client",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "stirng",
                    "example": "some-id-of-member-belongs-to-this-client"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful swapping the client",
            "content": {
              "application/json": {
                "example": {
                  "message": "Client swapped successfully",
                  "data": {
                    "user": {
                      "id": "18233c4a-b7c4-4962-85d3-125487d675c4",
                      "createdAt": "2023-12-29T01:28:38.410Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:38.510Z",
                      "name": "Test Member to swap between Client and Member",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "client": {
                        "id": "8d8c29ee-8573-4090-bda6-caa6ab17c48f",
                        "createdAt": "2023-12-29T01:28:38.510Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:38.510Z",
                        "email": "member@example.com",
                        "phone": "(00) 000000000",
                        "userId": "18233c4a-b7c4-4962-85d3-125487d675c4",
                        "addressId": null,
                        "address": {
                          "id": "7ba934b6-6d6e-420f-bcdd-7cbac5916ef4",
                          "createdAt": "2023-12-29T01:28:38.510Z",
                          "deletedAt": null,
                          "updatedAt": "2023-12-29T01:28:38.510Z",
                          "square": "0.6287442023371568",
                          "house": "0.46490600937712023",
                          "clientId": "8d8c29ee-8573-4090-bda6-caa6ab17c48f"
                        }
                      },
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Member not belongs to this client."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User haven't permission"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "memberId must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/resources/users/clients/{id}/change-address": {
      "put": {
        "summary": "Update Address Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Client that address to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Endpoint to update Address belongs to a Client to the system.",
        "tags": [
          "Client"
        ],
        "requestBody": {
          "description": "Client's Address details for updating",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "house": {
                        "type": "stirng",
                        "example": "new house create by member"
                      },
                      "square": {
                        "type": "stirng",
                        "example": "new house create by member"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful updating address of the client",
            "content": {
              "application/json": {
                "example": {
                  "message": "Client's address updated successfully",
                  "data": {
                    "user": {
                      "id": "405a36b0-7ce5-4370-bb5d-f5212c883f54",
                      "createdAt": "2023-12-29T01:28:39.483Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-29T01:28:39.483Z",
                      "name": "Test Client to change address",
                      "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                      "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                      "adminId": null,
                      "clientId": null,
                      "memberId": null,
                      "role": {
                        "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                        "createdAt": "2023-12-02T20:46:23.884Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-02T20:46:23.884Z",
                        "name": "CLIENT"
                      },
                      "client": {
                        "id": "9d19a899-a9f5-4895-b74f-141f7132064a",
                        "createdAt": "2023-12-29T01:28:39.483Z",
                        "deletedAt": null,
                        "updatedAt": "2023-12-29T01:28:39.483Z",
                        "email": "test@example.com",
                        "phone": "123",
                        "userId": "405a36b0-7ce5-4370-bb5d-f5212c883f54",
                        "addressId": null,
                        "user": {
                          "id": "405a36b0-7ce5-4370-bb5d-f5212c883f54",
                          "createdAt": "2023-12-29T01:28:39.483Z",
                          "deletedAt": null,
                          "updatedAt": "2023-12-29T01:28:39.483Z",
                          "name": "Test Client to change address",
                          "password": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                          "roleId": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                          "adminId": null,
                          "clientId": null,
                          "memberId": null,
                          "role": {
                            "id": "bce34a8f-b0d2-48da-b046-aca28ce84a35",
                            "createdAt": "2023-12-02T20:46:23.884Z",
                            "deletedAt": null,
                            "updatedAt": "2023-12-02T20:46:23.884Z",
                            "name": "CLIENT"
                          }
                        },
                        "address": {
                          "id": "4c1cc4d4-5366-429f-8c01-1f0098bb12be",
                          "createdAt": "2023-12-29T01:28:39.483Z",
                          "deletedAt": null,
                          "updatedAt": "2023-12-29T01:28:39.545Z",
                          "square": "new house create by admin",
                          "house": "new house create by admin",
                          "clientId": "9d19a899-a9f5-4895-b74f-141f7132064a"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Id mismatch in user authenticated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "User has no permissions"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Address house must be a string and not empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/signin": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticate and sign in a user.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "User credentials for sign-in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "securepassword"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful sign-in",
            "content": {
              "application/json": {
                "example": {
                  "message": "Token session created successfully",
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFkYzhmZmVhLWRhNTQtNGM3YS1hZThkLWQzZDMwYzBjNmYwMyIsIm5hbWUiOiJUZXN0IFVzZXIgQWRtaW4gdG8gc2lnbiBpbiB0ZXN0Iiwicm9sZUlkIjoiNjViY2NiNDAtODIyMS00NjdiLWJlYTYtYzliYTg0YWRhYmY0Iiwicm9sZSI6eyJpZCI6IjY1YmNjYjQwLTgyMjEtNDY3Yi1iZWE2LWM5YmE4NGFkYWJmNCIsImNyZWF0ZWRBdCI6IjIwMjMtMTItMDJUMjA6NDY6MjMuODgwWiIsImRlbGV0ZWRBdCI6bnVsbCwidXBkYXRlZEF0IjoiMjAyMy0xMi0wMlQyMDo0NjoyMy44ODBaIiwibmFtZSI6IkFETUlOIn0sImlhdCI6MTcwMzgxMzMyMCwiZXhwIjoxNzAzODEzMzI1fQ.EzhPgaaKn4BwpTwe4g_Quw_DuU_ruqZQm5Nc07PQ5aU",
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFkYzhmZmVhLWRhNTQtNGM3YS1hZThkLWQzZDMwYzBjNmYwMyIsIm5hbWUiOiJUZXN0IFVzZXIgQWRtaW4gdG8gc2lnbiBpbiB0ZXN0Iiwicm9sZUlkIjoiNjViY2NiNDAtODIyMS00NjdiLWJlYTYtYzliYTg0YWRhYmY0Iiwicm9sZSI6eyJpZCI6IjY1YmNjYjQwLTgyMjEtNDY3Yi1iZWE2LWM5YmE4NGFkYWJmNCIsImNyZWF0ZWRBdCI6IjIwMjMtMTItMDJUMjA6NDY6MjMuODgwWiIsImRlbGV0ZWRBdCI6bnVsbCwidXBkYXRlZEF0IjoiMjAyMy0xMi0wMlQyMDo0NjoyMy44ODBaIiwibmFtZSI6IkFETUlOIn0sImlhdCI6MTcwMzgxMzMyMCwiZXhwIjoxNzAzODEzMzMwfQ.p3htdSbbZTlSg5pcGlTdx9lVG_WUOk711PtdIVI3GT0",
                  "user": {
                    "id": "adc8ffea-da54-4c7a-ae8d-d3d30c0c6f03",
                    "name": "Test User Admin to sign in test",
                    "roleId": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                    "role": {
                      "id": "65bccb40-8221-467b-bea6-c9ba84adabf4",
                      "createdAt": "2023-12-02T20:46:23.880Z",
                      "deletedAt": null,
                      "updatedAt": "2023-12-02T20:46:23.880Z",
                      "name": "ADMIN"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Token with user invalid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - parameters are invalid",
            "content": {
              "application/json": {
                "example": {
                  "message": "Param(s) not permitted"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1": {
      "get": {
        "summary": "Welcome router",
        "description": "This router return the 'welcome'",
        "tags": [
          "Wellcome"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Welcome to meu açai API"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
